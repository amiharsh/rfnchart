apiVersion: tekton.dev/v1alpha1
kind: ClusterTask
metadata:
  name: s2i-nodejs-12
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: PATH_CONTEXT
        description: The location of the path to run s2i from
        default: .
        type: string
      - name: TLSVERIFY
        description: Verify the TLS on registry endpoint
        default: "true"
        type: string
      - name: BUILDERIMAGE
        default: {{ .Values.images.builderImageName }}
  outputs:
    resources:
      - name: image
        type: image
  steps:
    - name: generate
      image: {{ .Values.images.stiImageName }}
      workingdir: /workspace/source
      command:
        - 's2i'
        - 'build'
        - '$(inputs.params.PATH_CONTEXT)'
        - '$(inputs.params.BUILDERIMAGE)'
        - '--as-dockerfile'
        - '/gen-source/Dockerfile.gen'
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
    - name: build
      image: {{ .Values.images.buildahImageName }}
      workingdir: /gen-source
      command: ['buildah', 'bud', '--tls-verify=$(inputs.params.TLSVERIFY)', '--layers', '-f', '/gen-source/Dockerfile.gen', '-t', '$(outputs.resources.image.url)', '.']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
      securityContext:
        privileged: true
    - name: push
      image: {{ .Values.images.buildahImageName }}
      command: ['buildah', 'push', '--tls-verify=$(inputs.params.TLSVERIFY)', '$(outputs.resources.image.url)', 'docker://$(outputs.resources.image.url)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
